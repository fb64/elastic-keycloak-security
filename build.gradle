buildscript {
    ext {
        pluginVersion = rootProject.properties['pluginVersion']
        esVersion = rootProject.properties['esVersion']
        keycloakVersion = '14.0.0'
        jacksonVersion = '2.10.4'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:$esVersion"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'

group 'org.elasticsearch.plugin'
version "${pluginVersion}_es${esVersion}"


esplugin {
    name 'keycloak-security'
    description 'Elasticsearch Keycloak security plugin'
    classname 'org.elasticsearch.plugin.keycloak.KeycloakSecurityPlugin'
    licenseFile rootProject.file('LICENSE')
    noticeFile rootProject.file('NOTICE')
    version project.version
    extendedPlugins = ['x-pack-security']
}

configurations.all {
    //avoid conflict by force version used by elastic
    resolutionStrategy {
        force "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        force "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        force "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        force 'org.apache.httpcomponents:httpcore:4.4.13'
        force 'org.apache.httpcomponents:httpclient:4.5.12'
        force 'commons-codec:commons-codec:1.10'
        force 'commons-logging:commons-logging:1.1.3'
    }
}

dependencies {
    implementation "org.keycloak:keycloak-common:$keycloakVersion"
    implementation "org.keycloak:keycloak-core:$keycloakVersion"
    implementation "org.keycloak:keycloak-authz-client:$keycloakVersion"
    implementation "org.keycloak:keycloak-adapter-spi:$keycloakVersion"
    implementation "org.keycloak:keycloak-adapter-core:$keycloakVersion"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.65' +
            ''
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.65'

    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    implementation group: 'org.jboss.logging', name: 'jboss-logging', version: '3.4.1.Final'
    implementation group: 'org.jboss.logmanager', name: 'jboss-logmanager', version: '1.5.2.Final'
    implementation group: 'org.jboss.modules', name: 'jboss-modules', version: '1.1.0.GA'

    compileOnly group: 'javax.activation', name: 'activation', version: '1.1.1'
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.2'


    compileOnly "org.elasticsearch.plugin:x-pack-core:$esVersion"

    testImplementation "org.elasticsearch.client:x-pack-transport:$esVersion"
    testImplementation("junit:junit:4.13"){
        exclude group: "org.hamcrest" ,module: "hamcrest-core"
    }
}

/*
integTestRunner {
    systemProperty 'tests.security.manager', 'false'
}

integTestCluster {
    dependsOn buildZip

    //Keycloak realm configuration
    setting 'xpack.security.authc.realms.keycloak.order', '0'
    setting 'xpack.security.authc.realms.keycloak.type', 'keycloak'
    setting 'xpack.security.authc.realms.keycloak.config', 'keycloak.config'

    setting 'xpack.security.authc.realms.esusers.order', '1'
    setting 'xpack.security.authc.realms.esusers.type', 'file'
    setting 'xpack.security.authc.realms.native.type', 'native'
    setting 'xpack.security.authc.realms.native.order', '2'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.ml.enabled', 'false'
    setting 'xpack.monitoring.enabled', 'false'
    setting 'xpack.license.self_generated.type', 'trial'

    distribution = 'zip'


    //add keycloak config file for testing
    extraConfigFile 'keycloak.config',file("$rootDir/src/test/resources/config/keycloak.config")

    setupCommand 'setupDummyUser',
            'bin/elasticsearch-users', 'useradd', 'testor', '-p', 'password', '-r', 'superuser'

    waitCondition = { node, ant ->
        File tmpFile = new File(node.cwd, 'wait.success')
        ant.get(src: "http://${node.httpUri()}/_cluster/health?wait_for_nodes=>=${numNodes}&wait_for_status=yellow",
                dest: tmpFile.toString(),
                username: 'testor',
                password: 'password',
                ignoreerrors: true,
                retries: 10)
        return tmpFile.exists()
    }
}

check.dependsOn integTest */
